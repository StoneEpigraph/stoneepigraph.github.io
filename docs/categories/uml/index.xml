<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UML on 石记</title>
    <link>https://stoneepigraph.github.io/categories/uml/</link>
    <description>Recent content in UML on 石记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://stoneepigraph.github.io/categories/uml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UML</title>
      <link>https://stoneepigraph.github.io/posts/uml/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://stoneepigraph.github.io/posts/uml/</guid>
      <description>&lt;h2 id=&#34;基础知识&#34;&gt;基础知识&lt;/h2&gt;&#xA;&lt;h3 id=&#34;uml图&#34;&gt;UML图&lt;/h3&gt;&#xA;&lt;h4 id=&#34;类图&#34;&gt;类图&lt;/h4&gt;&#xA;&lt;p&gt;表述系统中各个对象的类型以及其间存在的各种静态关系.类图也示明类中的特性和操作以及用于对象连接方式的约束.&lt;/p&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;聚合与组合&lt;/p&gt;&#xA;&lt;p&gt;聚合是整体-部分关系.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可见性&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;+: 公用&lt;/li&gt;&#xA;&lt;li&gt;-: 私用&lt;/li&gt;&#xA;&lt;li&gt;~: 包&lt;/li&gt;&#xA;&lt;li&gt;#: 受护&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;顺序图&#34;&gt;顺序图&lt;/h4&gt;&#xA;&lt;p&gt;顺序图能明晰地指出参加者交互方面的区别.不擅长于示明诸如循环与条件行为等算法细节,但却能使参加者之间的调用一目了然.&#xA;当你考查单个用例内部若干对象的行为时,&lt;/p&gt;&#xA;&lt;h4 id=&#34;用例图&#34;&gt;用例图&lt;/h4&gt;&#xA;&lt;p&gt;用例通过表述系统的用户和系统本向之间特有的交互而工作,提供了如何使用系统的一种陈述.&lt;/p&gt;&#xA;&lt;h4 id=&#34;对象图&#34;&gt;对象图&lt;/h4&gt;&#xA;&lt;p&gt;是在一个时间点上系统中各个对象的一个快照.&#xA;由于对象图示明的是实例而不是类,&lt;/p&gt;&#xA;&lt;h4 id=&#34;包图&#34;&gt;包图&lt;/h4&gt;&#xA;&lt;p&gt;在UML中用双冒号表示包名.&#xA;对大型系统要了解系统主要成分之间的依赖时,使用包图.&#xA;包图表示一种编译时刻的聚组机制.关于示明在运行时刻如何来组合各个对象.&lt;/p&gt;&#xA;&lt;h4 id=&#34;部署图&#34;&gt;部署图&lt;/h4&gt;&#xA;&lt;p&gt;通过揭示&amp;quot;哪些软件片段运行于哪些硬件片段上&amp;quot;来示明系统的一个物理布局.&#xA;任何复杂的部署都可以很好地使用部署图.&lt;/p&gt;&#xA;&lt;h4 id=&#34;活动图&#34;&gt;活动图&lt;/h4&gt;&#xA;&lt;p&gt;活动图可以示明组织机构的工作流,示明软件与人的活动如何交互.活动图还可以示明用例的环境发及复杂用例如何工作的细节.&#xA;考查跨用例或跨线程的行为,就考虑活动图.&#xA;活动图是一种表述过程基理,业务过程以及工作流的技术.&lt;/p&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;分划&lt;/p&gt;&#xA;&lt;p&gt;分划示明一个类或一个机构单位施行哪些动作.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信号&lt;/p&gt;&#xA;&lt;p&gt;活动图有明确定义的起点,它对应于程序或例和的启用.动作亦可对应于信号.&#xA;信号指明活动接收来自外部过程的一个事件.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;权标&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;流与边&lt;/p&gt;&#xA;&lt;p&gt;是UML2中用来表述两个动作之间连接的同义词.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;饰针与转换&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;展开区域&lt;/p&gt;&#xA;&lt;p&gt;展开区域是活动图上标出的一个区域,其中的动作对一个组中每一项均要发生一次.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;流终&lt;/p&gt;&#xA;&lt;p&gt;流终(flow final)指明在整个活动并未终止时,一个特定流的终结.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;汇合指明&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;何时使用活动图&lt;/p&gt;&#xA;&lt;p&gt;活动图最大的优点是,它们支持并鼓励并行行为.这使它们成为工作流建模和过程建模的一项重要工具.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;通信图&#34;&gt;通信图&lt;/h4&gt;&#xA;&lt;p&gt;通信图是一种着重阐明交互中各个参加者之间的数据连接的交互图.&#xA;在UML1.x中,这些图称为协作图.&lt;/p&gt;&#xA;&lt;h4 id=&#34;构件图&#34;&gt;构件图&lt;/h4&gt;&#xA;&lt;h4 id=&#34;状态图&#34;&gt;状态图&lt;/h4&gt;&#xA;&lt;p&gt;如果一个概念具有有趣的生命周期,具有各种状态发及改变状态的事件,状态图则可能有用.&#xA;考虑用例的单个对象的行为,就用状态图.&lt;/p&gt;&#xA;&lt;h4 id=&#34;交互概观图&#34;&gt;交互概观图&lt;/h4&gt;&#xA;&lt;p&gt;是将活动图与顺序图嫁接在一起的图.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
