<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GIT on 石记</title>
    <link>https://stoneepigraph.github.io/categories/git/</link>
    <description>Recent content in GIT on 石记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://stoneepigraph.github.io/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gitignore</title>
      <link>https://stoneepigraph.github.io/posts/git/gitignore/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://stoneepigraph.github.io/posts/git/gitignore/</guid>
      <description>&lt;h2 id=&#34;规则&#34;&gt;规则&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;mtk&lt;/em&gt; 过滤整个文件夹&lt;/li&gt;&#xA;&lt;li&gt;*.zip 过滤所有.zip文件&lt;/li&gt;&#xA;&lt;li&gt;/mtk/do.c 过滤某个具体文件&lt;/li&gt;&#xA;&lt;li&gt;!*.zip 反忽略&lt;/li&gt;&#xA;&lt;li&gt;!/mtk/one.txt反忽略&lt;/li&gt;&#xA;&lt;li&gt;*.a       # 忽略所有 .a 结尾的文件&lt;/li&gt;&#xA;&lt;li&gt;!lib.a    # 但 lib.a 除外&lt;/li&gt;&#xA;&lt;li&gt;/TODO     # 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO&lt;/li&gt;&#xA;&lt;li&gt;build/    # 忽略 build/ 目录下的所有文件&lt;/li&gt;&#xA;&lt;li&gt;doc/*.txt # 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Git常用命令</title>
      <link>https://stoneepigraph.github.io/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://stoneepigraph.github.io/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>&lt;h2 id=&#34;git常用命令&#34;&gt;Git常用命令&lt;/h2&gt;&#xA;&lt;h3 id=&#34;新建代码库&#34;&gt;新建代码库&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在当前目录新建一个Git代码库&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git init&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;新建一个目录，将其初始化为Git代码库&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git init [Project_name]&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下载一个项目和它的整个代码历史&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git clone [url]&lt;/p&gt;&#xA;&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;添加指定文件到暂存区&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git add [fileName] &amp;hellip;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;添加当前目录的所有的文档到暂存区&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git add .&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;删除工作区文件，并且将这次删除放入暂存区&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git rm [fileName] &amp;hellip;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;停止追踪指定文件，但该文件会保留在工作区&#xA;&amp;gt; git rm &amp;ndash;cached [filename]&lt;/li&gt;&#xA;&lt;li&gt;改名文件，并且将这个改名放入暂存区&#xA;&amp;gt; git mv [file-original] [file-renamed]&lt;/li&gt;&#xA;&lt;li&gt;全局配置忽略Linux与Windows回车的类型&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global core.autocrlf true&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;代码提交&#34;&gt;代码提交&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提交暂存区到仓库区&#xA;&amp;gt; git commit -m [Message]&lt;/li&gt;&#xA;&lt;li&gt;提交暂存区的指定文件到仓库区&#xA;&amp;gt; git commit [file1] [file2] &amp;hellip; -m [message]&lt;/li&gt;&#xA;&lt;li&gt;提交工作区自上次commit之后的变化，直接到仓库区&#xA;&amp;gt; git commit -a&lt;/li&gt;&#xA;&lt;li&gt;提交时显示所有diff信息&#xA;&amp;gt; git commit -v&lt;/li&gt;&#xA;&lt;li&gt;使用一次新的commit, 替代上一次提交，如果代码没有变化，则用来改写上一次commit的提交信息&#xA;&amp;gt; git commit &amp;ndash;amend -m [message]&lt;/li&gt;&#xA;&lt;li&gt;重做上一次commit, 并包括指定文件的新变化&#xA;&amp;gt; git commit &amp;ndash;amend &amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;分支&#34;&gt;分支&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;列出所有本地分支&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git branch&lt;/p&gt;</description>
    </item>
    <item>
      <title>精通Git(2)</title>
      <link>https://stoneepigraph.github.io/posts/git/readnote/%E7%B2%BE%E9%80%9Agit_22/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://stoneepigraph.github.io/posts/git/readnote/%E7%B2%BE%E9%80%9Agit_22/</guid>
      <description>&lt;h2 id=&#34;精通git&#34;&gt;精通Git&lt;/h2&gt;&#xA;&lt;h3 id=&#34;git基础&#34;&gt;Git基础&lt;/h3&gt;&#xA;&lt;h4 id=&#34;获取git仓库&#34;&gt;获取Git仓库&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git init&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;记录每次更新到仓库&#34;&gt;记录每次更新到仓库&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git add .&#xA;git commit -m &#39;commit mesg&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;查询提交历史&#34;&gt;查询提交历史&lt;/h4&gt;&#xA;&lt;p&gt;#+END_SRC&#xA;git log&#xA;#+END_SRC&lt;/p&gt;&#xA;&lt;h4 id=&#34;撤消操作&#34;&gt;撤消操作&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git commit --amend&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;这个命令会将暂存区中的文件提交，如果自上次提交以来你还未做任何修改，那么快照会保持不变，而你所修改的只是提交信息。&#xA;e.g.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git commit -m &#39;initial commit&#39;&#xA;git add ofrgotten_file&#xA;git commit --amend&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;最终你只会有一个提交 - 第二冷饮提交将代替第一次提交的结果。&lt;/p&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;取消暂存的文件&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git reset HEAD&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;撤消对文件的修改&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git checkout xxx.file&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;远程仓库的使用&#34;&gt;远程仓库的使用&lt;/h4&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;查看远程仓库&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;get remote -v&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;添加远程仓库&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git remote add &amp;lt;shortname&amp;gt; &amp;lt;url&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--list-separator--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从远程仓库中抓取与拉取&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
