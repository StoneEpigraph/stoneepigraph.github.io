<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>容器 on 石记</title>
    <link>https://stoneepigraph.github.io/tags/%E5%AE%B9%E5%99%A8/</link>
    <description>Recent content in 容器 on 石记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://stoneepigraph.github.io/tags/%E5%AE%B9%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker笔记</title>
      <link>https://stoneepigraph.github.io/posts/docker/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://stoneepigraph.github.io/posts/docker/</guid>
      <description>&lt;h2 id=&#34;入门&#34; class=&#34;header-anchor-wrapper&#34;&gt;入门
  &lt;a href=&#34;#%e5%85%a5%e9%97%a8&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h2&gt;


&lt;h3 id=&#34;什么是docker&#34; class=&#34;header-anchor-wrapper&#34;&gt;什么是Docker
  &lt;a href=&#34;#%e4%bb%80%e4%b9%88%e6%98%afdocker&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;docker是一个容器技术。&lt;/p&gt;

&lt;h3 id=&#34;docker的优势&#34; class=&#34;header-anchor-wrapper&#34;&gt;Docker的优势
  &lt;a href=&#34;#docker%e7%9a%84%e4%bc%98%e5%8a%bf&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;一致的运行环境， 更轻松的迁移。&lt;/li&gt;
&lt;li&gt;对进程进行封装隔离，容器与容器之间互不影响，更高效的利用系统资源。&lt;/li&gt;
&lt;li&gt;通过镜像复制多个环境一致的容器。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;docker与虚拟机的对比&#34; class=&#34;header-anchor-wrapper&#34;&gt;Docker与虚拟机的对比
  &lt;a href=&#34;#docker%e4%b8%8e%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%9a%84%e5%af%b9%e6%af%94&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Docker占用磁盘少&lt;/li&gt;
&lt;li&gt;Docker的引擎比虚拟机系统占用CPU资源低&lt;/li&gt;
&lt;li&gt;Docker启动速度快&lt;/li&gt;
&lt;li&gt;Docker安装管理方便&lt;/li&gt;
&lt;li&gt;Docker从第二次部署开始轻松简捷&lt;/li&gt;
&lt;li&gt;Docker可以每个应用使用一个服务，服务隔离&lt;/li&gt;
&lt;li&gt;Docker推荐使用Linux，不推荐使用Windows&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;安装及配置&#34; class=&#34;header-anchor-wrapper&#34;&gt;安装及配置
  &lt;a href=&#34;#%e5%ae%89%e8%a3%85%e5%8f%8a%e9%85%8d%e7%bd%ae&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;下载安装&lt;/li&gt;
&lt;li&gt;配置
&lt;ol&gt;
&lt;li&gt;启动Docker
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo systemctl enable docker
sudo systemctl start docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;创建Docker用户组
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo groupadd docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;将当前用户添加到docker组
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo usermod -aG docker $USER
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;测试Docker是否安装正确&lt;/li&gt;
&lt;li&gt;重启Docker
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;docker核心概念&#34; class=&#34;header-anchor-wrapper&#34;&gt;Docker核心概念
  &lt;a href=&#34;#docker%e6%a0%b8%e5%bf%83%e6%a6%82%e5%bf%b5&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h3&gt;


&lt;h4 id=&#34;整体架构图&#34; class=&#34;header-anchor-wrapper&#34;&gt;整体架构图
  &lt;a href=&#34;#%e6%95%b4%e4%bd%93%e6%9e%b6%e6%9e%84%e5%9b%be&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;figure&gt;&lt;img src=&#34;https://stoneepigraph.github.io/ox-hugo/2021-01-10_17-34-07_screenshot.png&#34;&gt;
&lt;/figure&gt;


&lt;h4 id=&#34;仓库-repository&#34; class=&#34;header-anchor-wrapper&#34;&gt;仓库 Repository
  &lt;a href=&#34;#%e4%bb%93%e5%ba%93-repository&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;定义： 用来存储Docker中的镜像。&lt;/li&gt;
&lt;li&gt;分类：
&lt;ul&gt;
&lt;li&gt;远程仓库&lt;/li&gt;
&lt;li&gt;本地仓库： 当前自己机器中下载镜像存储位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;镜像-image&#34; class=&#34;header-anchor-wrapper&#34;&gt;镜像 Image
  &lt;a href=&#34;#%e9%95%9c%e5%83%8f-image&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;定义： 一个镜像代表一个软件安装包。&lt;/li&gt;
&lt;li&gt;特点： 只读&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;容器-container&#34; class=&#34;header-anchor-wrapper&#34;&gt;容器 Container
  &lt;a href=&#34;#%e5%ae%b9%e5%99%a8-container&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;定义： 基于某个镜像启动的实例，称之为一个服务。&lt;/li&gt;
&lt;li&gt;特定： 可读可写&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;常用命令&#34; class=&#34;header-anchor-wrapper&#34;&gt;常用命令
  &lt;a href=&#34;#%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h3&gt;


&lt;h4 id=&#34;引擎-以及镜像相关的操作&#34; class=&#34;header-anchor-wrapper&#34;&gt;引擎， 以及镜像相关的操作
  &lt;a href=&#34;#%e5%bc%95%e6%93%8e-%e4%bb%a5%e5%8f%8a%e9%95%9c%e5%83%8f%e7%9b%b8%e5%85%b3%e7%9a%84%e6%93%8d%e4%bd%9c&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;docker info&lt;/li&gt;
&lt;li&gt;docker &amp;ndash;help || docker 查看docker所有帮助命令&lt;/li&gt;
&lt;li&gt;docker version&lt;/li&gt;
&lt;li&gt;docker 执行命令格式： docker [options] command&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;操作镜像images的相关命令&#34; class=&#34;header-anchor-wrapper&#34;&gt;操作镜像images的相关命令
  &lt;a href=&#34;#%e6%93%8d%e4%bd%9c%e9%95%9c%e5%83%8fimages%e7%9a%84%e7%9b%b8%e5%85%b3%e5%91%bd%e4%bb%a4&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;查看本地的镜像
docker images&lt;/li&gt;
&lt;li&gt;下载新的镜像
docker pull dockerImageName:dockerVersion
docker pull dockerImageName:@digest(摘要)&lt;/li&gt;
&lt;li&gt;搜索镜像
docker search dockerImageName&lt;/li&gt;
&lt;li&gt;删除镜像
docker image rm dockerImageName:dockerVersion
docker image rm dockerImageId
docker rmi &amp;hellip;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;容器相关-container&#34; class=&#34;header-anchor-wrapper&#34;&gt;容器相关 Container
  &lt;a href=&#34;#%e5%ae%b9%e5%99%a8%e7%9b%b8%e5%85%b3-container&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;运行容器
docker run dockerImageName:tag | 镜像ID
&lt;ol&gt;
&lt;li&gt;映射端口
docker run -p 宿主机端口:容器内服务端口 dockerImageName&lt;/li&gt;
&lt;li&gt;后台运行
-d&lt;/li&gt;
&lt;li&gt;给容器命名，唯一
&amp;ndash;name containerName&lt;/li&gt;
&lt;li&gt;-it&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;导入容器
docker load -i dockerTag.tar&lt;/li&gt;
&lt;li&gt;查看当前运行的容器
docker ps
&lt;ul&gt;
&lt;li&gt;查看所有的容器，包括已停止的
docker ps -a&lt;/li&gt;
&lt;li&gt;返回正在运行的容器ID
docker ps -q&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;重启，停止容器
docker start dockerContainerId | dockerName
docker restart dockerContainerid | dockerName
docker stop dockerCOntainerid | dockerName&lt;/li&gt;
&lt;li&gt;删除容器
docker rm dockerContainerId | dockerName
&lt;ol&gt;
&lt;li&gt;强制删除， 包括正在运行的容器
docker rm -f dockerContainerid | dockerName&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;查看容器内运行日志
docker log dockerContainerid | dockerName
&lt;ol&gt;
&lt;li&gt;实时查看日志
-f&lt;/li&gt;
&lt;li&gt;加入时间戳实时展示日志
-t&lt;/li&gt;
&lt;li&gt;显示指定行数的日志
&amp;ndash;tail Number&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;查看容器内的进程
docker top dockerContainerid | dockerName&lt;/li&gt;
&lt;li&gt;与容器内部进行交互
docker exec -it dockerCOntainerid | dockerName Command [args]&lt;/li&gt;
&lt;li&gt;宿主与容器的传输文件
&lt;ol&gt;
&lt;li&gt;从容器到操作系统
docker cp dockerContainerid | dockerName :/path/file ./file&lt;/li&gt;
&lt;li&gt;从宿主到容器
docker cp 文件 | 目录 dockerContainerid | dockerName: 容器内目录&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;查看容器内部细节
docker inspect dockerContainerid | dockerName&lt;/li&gt;
&lt;li&gt;数据卷 Volume
&lt;ol&gt;
&lt;li&gt;使用： 实现襥机系统与容器之间的文件共享&lt;/li&gt;
&lt;li&gt;特点：
&lt;ol&gt;
&lt;li&gt;数据卷可以在容器之间共享和重用。&lt;/li&gt;
&lt;li&gt;对数据卷的修改会立即影响到对应容器。&lt;/li&gt;
&lt;li&gt;对数据卷的更新修改，不会影响镜像。&lt;/li&gt;
&lt;li&gt;数据卷默认会一直存在， 即使容器被删除。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;使用
&lt;ol&gt;
&lt;li&gt;自定义数据卷
docker run -v 宿主机目录:容器目录:ro dockerImageId&lt;/li&gt;
&lt;li&gt;自动创建数据卷
docker run -v 卷名:容器内路径 dockerImageId&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;查看卷
docker volume inspect volumeName
docker volume ls&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;将正在运行的容器打包成镜像
docker commit -m &amp;rsquo;&amp;rsquo; -a &amp;rsquo;&amp;rsquo; dockerContainerid dockerImageName:dockerTag&lt;/li&gt;
&lt;li&gt;将镜像备份
docker save 镜像名称:tag -o dockerBak-tag.tar&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;网络配置&#34; class=&#34;header-anchor-wrapper&#34;&gt;网络配置
  &lt;a href=&#34;#%e7%bd%91%e7%bb%9c%e9%85%8d%e7%bd%ae&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;docker容器与操作系统通信机制默认使用网桥&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>