<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSV on 石记</title>
    <link>https://stoneepigraph.github.io/tags/csv/</link>
    <description>Recent content in CSV on 石记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://stoneepigraph.github.io/tags/csv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git常用命令</title>
      <link>https://stoneepigraph.github.io/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://stoneepigraph.github.io/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>&lt;h2 id=&#34;git常用命令&#34;&gt;Git常用命令&lt;/h2&gt;&#xA;&lt;h3 id=&#34;新建代码库&#34;&gt;新建代码库&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在当前目录新建一个Git代码库&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git init&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;新建一个目录，将其初始化为Git代码库&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git init [Project_name]&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下载一个项目和它的整个代码历史&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git clone [url]&lt;/p&gt;&#xA;&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;添加指定文件到暂存区&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git add [fileName] &amp;hellip;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;添加当前目录的所有的文档到暂存区&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git add .&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;删除工作区文件，并且将这次删除放入暂存区&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git rm [fileName] &amp;hellip;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;停止追踪指定文件，但该文件会保留在工作区&#xA;&amp;gt; git rm &amp;ndash;cached [filename]&lt;/li&gt;&#xA;&lt;li&gt;改名文件，并且将这个改名放入暂存区&#xA;&amp;gt; git mv [file-original] [file-renamed]&lt;/li&gt;&#xA;&lt;li&gt;全局配置忽略Linux与Windows回车的类型&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global core.autocrlf true&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;代码提交&#34;&gt;代码提交&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提交暂存区到仓库区&#xA;&amp;gt; git commit -m [Message]&lt;/li&gt;&#xA;&lt;li&gt;提交暂存区的指定文件到仓库区&#xA;&amp;gt; git commit [file1] [file2] &amp;hellip; -m [message]&lt;/li&gt;&#xA;&lt;li&gt;提交工作区自上次commit之后的变化，直接到仓库区&#xA;&amp;gt; git commit -a&lt;/li&gt;&#xA;&lt;li&gt;提交时显示所有diff信息&#xA;&amp;gt; git commit -v&lt;/li&gt;&#xA;&lt;li&gt;使用一次新的commit, 替代上一次提交，如果代码没有变化，则用来改写上一次commit的提交信息&#xA;&amp;gt; git commit &amp;ndash;amend -m [message]&lt;/li&gt;&#xA;&lt;li&gt;重做上一次commit, 并包括指定文件的新变化&#xA;&amp;gt; git commit &amp;ndash;amend &amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;分支&#34;&gt;分支&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;列出所有本地分支&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;gt; git branch&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
