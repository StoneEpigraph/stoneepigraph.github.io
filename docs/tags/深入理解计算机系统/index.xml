<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>深入理解计算机系统 on 石记</title>
    <link>https://stoneepigraph.github.io/tags/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 深入理解计算机系统 on 石记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://stoneepigraph.github.io/tags/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>csapp</title>
      <link>https://stoneepigraph.github.io/posts/csapp/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>https://stoneepigraph.github.io/posts/csapp/</guid>
      <description>&lt;h2&gt;计算机系统漫游&lt;/h2&gt;


&lt;h3&gt;信息就是位+上下文&lt;/h3&gt;


&lt;h3&gt;程序被其他程序翻译成不同的格式&lt;/h3&gt;

&lt;p&gt;hello程序的生命周期是从一个高级C语言开始的，因为这种形式能够被人读懂。然而，为了在系统上运行hello.c程序，每条C诗句都必须被其他程序转化为一系列的低级机器语言指令。然后这些指令按照一种称为可执行目标程序的格式打好包，并以二进制磁盘文件的形式存放起来。目标程序也称为可执行目标文件。&lt;/p&gt;

&lt;h3&gt;了解编译系统如何工作是大有益处的&lt;/h3&gt;


&lt;h4&gt;优化程序性能&lt;/h4&gt;


&lt;h4&gt;理解链接时出现的错误&lt;/h4&gt;


&lt;h4&gt;避免安全漏洞&lt;/h4&gt;


&lt;h3&gt;处理器读并解释储存在中的指令&lt;/h3&gt;


&lt;h4&gt;系统的硬件组成&lt;/h4&gt;

&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;总线&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;I/O设备&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;主存&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;处理器&lt;/p&gt;
 &lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;加载&lt;/li&gt;
&lt;/ul&gt;
 &lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;存储&lt;/li&gt;
&lt;/ul&gt;
 &lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;操作&lt;/li&gt;
&lt;/ul&gt;
 &lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;跳转&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;高速缓存至关重要&lt;/h3&gt;


&lt;h3&gt;存储设备形成层次结构&lt;/h3&gt;

&lt;p&gt;在处理器和一个较大较慢的设备（例如主存）之间插入一个更小更快的存储设备（例如高速红艳艳）的想法已经成为一个普通的观念。实际上，每个计算机系统中的存储设备都被组织成了一个存储器层次结构，在这个层次结构中， 从上至下，设备的访问速度起来越慢，容量越来越大，并且每字节的造价也越来越便宜。&lt;/p&gt;

&lt;h3&gt;操作系统管理硬件&lt;/h3&gt;

&lt;p&gt;所有应用程序对硬件的操作深度都必须通过操作系统。&lt;/p&gt;

&lt;h4&gt;操作系统有两个基本功能&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;防止硬件被失控的应用程序滥用&lt;/li&gt;
&lt;li&gt;向应用程序提供简单一致的机制来控制复杂而又通常大不相同的低级硬件设备。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;操作系统通过几个基本的抽象概念来实现这两个功能&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;进程进程则是对处理器、主存和I/O设备的抽象表示。&lt;/li&gt;
&lt;li&gt;虚拟内存虚拟内存是对主存和磁盘I/O设备的抽象表示&lt;/li&gt;
&lt;li&gt;文件文件是对I/O设备的抽象表示&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;进程&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;线程&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;虚拟内存&lt;/p&gt;
&lt;p&gt;虚拟内存是一个抽象概念，它为每个进程提供了一个假象，即每个进程都在独占地使用主存。每个进程看到的内存都是一致的，称为虚拟地址空间。在Linux中，地址空间最上面的区域是保留给操作系统中的代码和数据的，这对所有进程来说都是一样。地址空间的底部区域存放用户进程定义的代码和数据。注意，地址是从下往上增大的。从下往上依次是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;程序代码和数据。&lt;/li&gt;
&lt;li&gt;堆&lt;/li&gt;
&lt;li&gt;共享库&lt;/li&gt;
&lt;li&gt;栈&lt;/li&gt;
&lt;li&gt;内核虚拟内存&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文件&lt;/p&gt;
&lt;p&gt;文件就是字节序列，每个I/O设备，包括磁盘、键盘、显示器，甚至网络，都可以看成是文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;系统之间利用网络通信&lt;/h3&gt;


&lt;h2&gt;程序结构和执行&lt;/h2&gt;


&lt;h3&gt;信息的表示和处理&lt;/h3&gt;


&lt;h4&gt;信息存储&lt;/h4&gt;

&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;十六进制表示法&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;字数据大小&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;寻址和字节顺序&lt;/p&gt;
&lt;p&gt;大端法小端法&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;表示字符串&lt;/p&gt;
&lt;p&gt;C语言中字符串被编码为一个以null(其值为0)字符结尾的字符数组。每个字符都同某个标准编码来表示，最常见的是ASCII字符码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;表示代码&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;布尔代数简介&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>